---
title: "카테고리 별 상품 개수 구하기
"
description: >-  
  String, Date
author: jutory
date: 2025-02-05
categories: [SQL Coding Test, Programmers]  
tags: [SQL]  
---
<br>
## **문제 설명**

다음은 동물 보호소에서 관리하는 정보를 담은 **ANIMAL_INS 테이블**과 동물 보호소에서 입양 보낸 동물의 정보를 담은 **ANIMAL_OUTS 테이블**입니다.

<br>
> #### **ANIMAL_INS 테이블**

| Column name      | Type         | Nullable | Description                 |
|------------------|--------------|----------|-----------------------------|
| ANIMAL_ID        | VARCHAR(N)   | FALSE    | 동물 ID                     |
| ANIMAL_TYPE      | VARCHAR(N)   | FALSE    | 생물 종                     |
| DATETIME         | DATETIME     | FALSE    | 보호 시작일                 |
| INTAKE_CONDITION | VARCHAR(N)   | FALSE    | 보호 시작 당시 상태         |
| NAME             | VARCHAR(N)   | TRUE     | 동물의 이름                 |
| SEX_UPON_INTAKE  | VARCHAR(N)   | FALSE    | 보호 시작 시의 성별 및 중성화 여부 |

<br>
> #### **ANIMAL_OUTS 테이블**

| Column name      | Type         | Nullable | Description                 |
|------------------|--------------|----------|-----------------------------|
| ANIMAL_ID        | VARCHAR(N)   | FALSE    | 동물 ID                     |
| ANIMAL_TYPE      | VARCHAR(N)   | FALSE    | 생물 종                     |
| DATETIME         | DATETIME     | FALSE    | 입양일                      |
| NAME             | VARCHAR(N)   | TRUE     | 동물의 이름                 |
| SEX_UPON_OUTCOME | VARCHAR(N)   | FALSE    | 입양 시의 성별 및 중성화 여부 |

<br>
예를 들어, ANIMAL_INS 테이블이 다음과 같다면

| ANIMAL_ID | ANIMAL_TYPE | DATETIME             | INTAKE_CONDITION | NAME   | SEX_UPON_INTAKE |
|-----------|-------------|----------------------|------------------|--------|-----------------|
| A349996   | Cat         | 2018-01-22 14:32:00  | Normal           | Sugar  | Neutered Male   |
| A350276   | Cat         | 2017-08-13 13:50:00  | Normal           | Jewel  | Spayed Female   |
| A350375   | Cat         | 2017-03-06 15:01:00  | Normal           | Meo    | Neutered Male   |
| A352555   | Dog         | 2014-08-08 04:20:00  | Normal           | Harley | Spayed Female   |
| A352713   | Cat         | 2017-04-13 16:29:00  | Normal           | Gia    | Spayed Female   |

SQL문을 실행하면 다음과 같이 나와야 합니다.

| ANIMAL_ID | NAME   | 날짜       |
|-----------|--------|------------|
| A349996   | Sugar  | 2018-01-22 |
| A350276   | Jewel  | 2017-08-13 |
| A350375   | Meo    | 2017-03-06 |
| A352555   | Harley | 2014-08-08 |
| A352713   | Gia    | 2017-04-13 |

시각(시-분-초)을 제외한 날짜(년-월-일)만 보여주세요.

<br>
- - -
<br>
## **문제**

> ANIMAL_INS 테이블에 등록된 모든 레코드에 대해, 각 동물의 아이디와 이름, 들어온 날짜를 조회하는 SQL문을 작성해주세요. 이때 결과는 아이디 순으로 조회해야 합니다.
{: .prompt-info }

<br>
- - -
<br>
<details>
  <summary style="font-size: 1.5em; font-weight: bold;">풀이 과정</summary>
<div markdown="1">

1. **날짜 부분 추출**  
   - DATETIME 컬럼은 날짜와 시간이 모두 포함되어 있으므로, 날짜 부분만 출력하기 위해 날짜 함수를 사용
      - MySQL에서는 `DATE(DATETIME)` 함수를 사용하여 DATETIME 컬럼에서 날짜 부분만 추출
      - Oracle에서는 `TO_CHAR(DATETIME, 'YYYY-MM-DD')` 함수 사용

**날짜 부분 추출**  
   - DATETIME 컬럼은 날짜와 시간이 함께 포함되어 있으므로, 시각(시분초)을 제외한 날짜(년-월-일)만 출력해야 합니다.  
   - MySQL에서는 `DATE_FORMAT()` 함수를 사용하여 DATETIME 값을 원하는 형식의 문자열("YYYY-MM-DD")로 변환할 수 있습니다.
     - 예: `DATE_FORMAT(`DATETIME`, '%Y-%m-%d')`는 DATETIME 값에서 연도, 월, 일을 추출하여 "YYYY-MM-DD" 형식의 문자열을 반환합니다.

2. **결과 정렬**  
   - 정렬 기준에 따라 **ORDER BY**로 결과 정렬
     -  매출액을 기준으로 내림차순 정렬하고, 매출액이 같은 경우 **상품 코드를 기준으로 오름차순** 정렬
  
3. **최종 출력**  
   - SELECT 절에서 **동물의 아이디(`ANIMAL_ID`)**, **이름(`NAME`)**, 그리고 **날짜(`날짜`)**를 조회합니다.

* **_교훈_**
   - DATE() 함수는 날짜만 추출하지만, 출력 환경에 따라 기본 시간 분 초(00:00:00) 까지 붙어서 틀렸었다. <br> DATE_FORMAT() 함수는 결과를 정확히 'YYYY-MM-DD' 형식의 문자열로 만들어 줌..... 데이트 형식으로 맞춰야한다면 STR_TO_DATE(DATE_FORMAT(DATETIME, '%Y-%m-%d'), '%Y-%m-%d') <--요거 사용해야한다. 중요한 정보를 알았다. 굿..
</div>
</details>

<br>
- - -
<br>
## **정답**

```sql
SELECT 
    ANIMAL_ID,
    NAME,
    DATE_FORMAT(DATETIME, '%Y-%m-%d') AS 날짜
FROM 
    ANIMAL_INS
ORDER BY 
    ANIMAL_ID;
```

- - -
<br>
## **Tip**
> **날짜 부분 추출**  
>    - **MySQL : DATE_FORMAT(NOW(), '%Y/%m/%d')** = **(DATE_FORMAT(SYSDATE(), '%Y/%m/%d')** 함수 통해 날짜 부분 STRING으로 추출
>    - Oracle : TO_CHAR(SYSDATE, 'YYYY/MM/DD')와 같은 의미
{: .prompt-tip }
> SQL Dialect Used: Oracle

<br>
- - -
<br>
## **개념 확인**
> - **DATE() 함수 (MySQL)**
>    - **DATE(datetime)** 함수는 DATETIME 데이터에서 날짜 부분만 추출하여 기본 포맷인 YYYY-MM-DD 형식으로 반환함 <br> ex) DATE('2018-01-22 14:32:00')는 `2018-01-22`를 반환합니다.
>
> - **DATE_FORMAT() 함수 (MySQL)**
>    - **DATE_FORMAT(date, format)** 함수는 날짜 및 시간 데이터를 사용자가 지정한 포맷의 문자열로 변환함. <br> `ex) DATE_FORMAT(DATETIME, '%Y/%m/%d')` = 'YYYY/MM/DD' 형식의 문자열로 반환
>        - _%Y_ : 4자리 연도
>        - _%m_ : 2자리 월
>        - _%d_ : 2자리 일
>        - _%H_ : 24시간 형식의 시
>        - _%i_ : 분
>        - _%s_ : 초
> - **만약 이 결과를 다시 날짜(Date) 타입으로 사용하고 싶다면**
>    - **STR_TO_DATE()** 함수를 사용하여 해당 문자열을 날짜로 변환 <br> `ex) STR_TO_DATE(DATE_FORMAT(NOW(), '%Y/%m/%d'), '%Y/%m/%d')`
>
> **+ 헷갈리지 말자**
> - DATE(SYSDATE())는 날짜 부분만 추출하여 DATE 데이터 타입의 값(YYYY-MM-DD 형식)을 반환하지만,
> -`DATE_FORMAT(SYSDATE(), '%Y/%MM%DD')는 동일한 날짜를 지정한 포맷(여기서는 YYYY/MM/DD")으로 형식화한 **문자열**을 반환함

<br>
- - -
<br>
## **Useful link**

[보호소에서 중성화한 동물](https://school.programmers.co.kr/learn/courses/30/lessons/59045)